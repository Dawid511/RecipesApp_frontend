Index: src/features/recipe/RecipeList.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {RecipeType} from \"../../types/RecipeType\";\r\nimport {RecipeItem} from \"./RecipeItem\";\r\nimport {SimpleGrid} from \"@mantine/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {listRecipe} from \"./api/recipe\";\r\n\r\n\r\nexport const RecipeList = () => {\r\n    const [data, setData] = useState<RecipeType[]>([]);\r\n\r\n    useEffect(() => {\r\n        listRecipe().then((response) => setData(response));\r\n    }, [])\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <SimpleGrid cols={{base: 1, sm: 2, lg: 3}}>\r\n                {data.map((item) => <RecipeItem key={item.id} item={item}/>)}\r\n            </SimpleGrid>\r\n        </div>\r\n    )\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/features/recipe/RecipeList.tsx b/src/features/recipe/RecipeList.tsx
--- a/src/features/recipe/RecipeList.tsx	
+++ b/src/features/recipe/RecipeList.tsx	
@@ -1,22 +1,44 @@
-import {RecipeType} from "../../types/RecipeType";
-import {RecipeItem} from "./RecipeItem";
-import {SimpleGrid} from "@mantine/core";
-import {useEffect, useState} from "react";
-import {listRecipe} from "./api/recipe";
+import React, { useState, useEffect } from "react";
+import { SimpleGrid, Pagination, Text } from "@mantine/core";
+import { RecipeType } from "../../types/RecipeType";
+import { RecipeItem } from "./RecipeItem";
+import { listRecipe } from "./api/recipe";
 
+const ITEMS_PER_PAGE = 6;
 
 export const RecipeList = () => {
     const [data, setData] = useState<RecipeType[]>([]);
+    const [activePage, setActivePage] = useState(1);
 
     useEffect(() => {
         listRecipe().then((response) => setData(response));
-    }, [])
+    }, []);
+
+    const paginatedData = data.slice(
+        (activePage - 1) * ITEMS_PER_PAGE,
+        activePage * ITEMS_PER_PAGE
+    );
+
+    const handlePageChange = (page: number) => {
+        setActivePage(page);
+    };
+
     return (
-        <div style={{width: '100%'}}>
-            <SimpleGrid cols={{base: 1, sm: 2, lg: 3}}>
-                {data.map((item) => <RecipeItem key={item.id} item={item}/>)}
+        <div style={{ width: "100%" }}>
+            <SimpleGrid cols={{ base: 1, sm: 2, lg: 3 }}>
+                {paginatedData.map((item) => (
+                    <RecipeItem key={item.id} item={item} />
+                ))}
             </SimpleGrid>
+            <Pagination
+                total={Math.ceil(data.length / ITEMS_PER_PAGE)}
+                value={activePage}
+                onChange={handlePageChange}
+                mt="sm"
+                color="gray"
+                size="sm"
+                radius="xl"
+            />
         </div>
-    )
-}
-
+    );
+};
